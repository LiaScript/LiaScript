@use "sass:map";
@use "sass:math";
@use "../00_settings/settings.global";
@use "tools.px-em-calc";

/* --------------------------------------------------
   Breakpoint Mixin
   -------------------------------------------------- */

// use 'xs', 'sm', 'md', 'lg', 'xl' or a custom value
@mixin breakpoint($breakpoint, $direction: settings.$global-media-direction) {
  // check if value is a preconfigured breakpoint
  @if map.has-key(settings.$global-breakpoints, $breakpoint) {
    @if $direction == "max" {
      @media screen and (max-width: #{map.get(settings.$global-breakpoints, $breakpoint) - tools.calc-em(1, 16)}) {
        @content;
      }
    } @else {
      @media screen and (min-width: #{map.get(settings.$global-breakpoints, $breakpoint)}) {
        @content;
      }
    }
  }

  // check unit of value, fallback pixel
  @else if math.is-unitless($breakpoint) {
    $breakpoint: $breakpoint + 0px;

    @media screen and (#{$direction}-width: $breakpoint) {
      @content;
    }
  }
}

@mixin breakpoint-only($a, $b) {
  @if map.has-key(settings.$global-breakpoints, $a) and
    map.has-key(settings.$global-breakpoints, $b)
  {
    @media screen and (min-width: #{map.get(settings.$global-breakpoints, $a) - tools.calc-em(1, 16)}) and (max-width: #{map.get(settings.$global-breakpoints, $b) - tools.calc-em(1, 16)}) {
      @content;
    }
  } @else if math.is-unitless($a) or math.is-unitless($b) {
    $a: $a + 0px;
    $b: $b + 0px;

    @media screen and (min-width: $a) and (max-width: $b) {
      @content;
    }
  }
}
